1) In your own words, explain what clean code is and why it is important.
    A: it makes your code easier to read and understand.

2) Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.
    A: 

3) Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.
    A: No, I do not think it is clean code.  There is too many comments and the variables aren't named properly.

4) Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.
    A: Yes it is clean code.  Functions and variables are named appropriately.

5) Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.
    a. The following function prints the subtotal of a customer's transaction and receives payment accordingly.
        A: 
        FUNCTION checkOutCustomer(subTotal, discountRate, paymentType)

            var totalTax = tax * subTotal;
            var discountTotal = subTotal * discountRate;
        
            PRINT "Your total due is: " + (discountTotal + totalTax)

            IF paymentType = 'CASH' THEN
                CALL getPayment RETURNING amount
                PRINT "Change due: " + (amount - discountTotal + totalTax)
            
            ELSE IF paymentType = 'CREDIT CARD' THEN
                CALL getPayment RETURNING amount
                PRINT "Your credit card has been charged: " + (discountTotal + totalTax)

            END IF
        END FUNCTION

    b. The following function checks out a book if there are no issues with the guest's account.
        A: 
        Function checkoutBook(book, guest)
            IF guest.accountActive AND NOT(guest.hasOverdueBooks) AND guest.outstandingFees = 0 THEN
                APPEND book to guest.books
                SET book.status to "Checked Out"
                PRINT "Your books have been issued"
            ELSE
                PRINT "Unable to check out book"
            END IF
        END Function

    c. The following class is a code snippet that should support the transactions a customer can perform at an ATM.
        A:
        CLASS BankAccount
            FUNCTION displayBalance
                PRINT balance
            END FUNCTION

            FUNCTION deposit(amount)
                SET balance to balance + amount
            END FUNCTION

            FUNCTION withdraw(amount)
                IF balance > amount THEN
                SET balance to balance - amount
                END
            END FUNCTION
        END CLASS

        CLASS BankOffers
            FUNCTION checkStatus
                IF NOT(customer.hasCheckingAccount) THEN
                    CALL offerCheckingAccount
                END
            END FUNCTION
        END CLASS

6) Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum.
    A:
    function square(array){
        var sum = 0;

        array.map(number => sum += number)

        var squared = Math.sqrt(sum)

        if(squared % 1 === 0){
            return squared
        } else {
            return sum
        }
    }

7) Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.
    A: 
    function duplicate(array){
        var result=false;
        for(var i=0; i < array.length; i++){
            var firstNumber = array[i];
            for(var j= i+1; j+i < array.length; j++){
                var secondNumber = array[j];
                if(firstNumber === secondNumber){
                    result=true
                }
            }
        }
        return result
    }